<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.seaduckene.user.mapper.IUserMapper">
	
	<resultMap type="kr.co.seaduckene.user.command.Categories" id="categories">
		<result property="categoryMajorTitle" column="category_major_title"/>
		<collection property="categoryMinorList" resultMap="minorList"/>
	</resultMap>
	
	<resultMap type="String" id="minorList">
		<result property="categoryMinorTitle" column="category_minor_title"/>
	</resultMap>
	
	
	<sql id="profile_column">
		<if test="userProfilePath != null">, user_profile_path, user_profile_folder,
		 user_profile_file_name, user_profile_file_real_name</if>
	</sql>
	
	<sql id="profile_value">
		<if test="userProfilePath != null">, #{userProfilePath}, #{userProfileFolder},
		 #{userProfileFileName}, #{userProfileFileRealName}</if>
	</sql>
	
	<sql id="email_column">
		<if test="userEmail != null">, user_email</if>
	</sql>
	
	<sql id="email_value">
		<if test="userEmail != null">, #{userEmail}</if>
	</sql>
	
	<!-- <resultMap type="kr.co.seaduckene.user.command.UserCategories" id="userCategories">
		<result property="userNo" column="user_no" />
		<collection property="categoryMajorList" resultMap="userMajorList"/>
		<collection property="categoryMinorList" resultMap="userMinorList"/>
	</resultMap>
	
	<resultMap type="String" id="userMajorList">
		<result property="categoryMajorTitle" column="category_major_title"/>
	</resultMap>

	<resultMap type="String" id="userMinorList">
		<result property="categoryMinorTitle" column="category_minor_title"/>
	</resultMap> -->
	
	
	<insert id="registUser">
		INSERT INTO duck_user 
		(user_no, user_id, user_pw, user_nickname, user_name, user_tel<include refid="profile_column" /><include refid="email_column" />)
		VALUES (duck_user_seq.NEXTVAL, #{userId}, #{userPw}, #{userNickname},
		 #{userName}, #{userTel}<include refid="profile_value" /><include refid="email_value" />)
	</insert>
	
	<select id="getUserVo" resultType="user">
		SELECT * FROM duck_user WHERE user_id = #{userId} AND user_pw = #{userPw}
	</select>
	
	<select id="getUserVoWithNo" resultType="user">
		SELECT * FROM duck_user WHERE user_no = #{userNo}
	</select>
	
	<select id="getCategories" resultMap="categories">
		SELECT category_major_title, category_minor_title FROM category
		ORDER BY category_major_title, category_minor_title 
	</select>
	
	<select id="getCategoryNo" resultType="int">
		SELECT category_no FROM category WHERE category_major_title = #{categoryMajorTitle} AND category_minor_title = #{categoryMinorTitle}
	</select>
	
	<select id="getUserNo" resultType="int">
		SELECT user_no FROM duck_user WHERE user_id = #{userId}
	</select>
	
	<insert id="insertFavorite">
		INSERT INTO favorite (favorite_no, favorite_category_no, favorite_user_no) VALUES (favorite_seq.NEXTVAL, #{categoryNo}, #{userNo})
	</insert>

	<select id="getBasket" resultType="basket">
		SELECT * FROM basket
		WHERE basket_user_no = #{num}
	</select>

	<select id="checkId" resultType="int">
		SELECT COUNT(*) FROM duck_user WHERE user_id = #{userId}
	</select>
	
	<select id="checkNickname" resultType="int">
		SELECT COUNT(*) FROM duck_user WHERE user_nickname = #{userNickname}
	</select>
	
	<select id="getUserCategories" resultType="category">
		SELECT *
		FROM favorite f JOIN duck_user u ON f.favorite_user_no = u.user_no
		                JOIN category c ON f.favorite_category_no = c.category_no
		WHERE u.user_no = #{userNo}
		ORDER BY u.user_no, c.category_major_title, c.category_minor_title
	</select>
	
	<select id="getUserAddr" resultType="address">
		SELECT * FROM address WHERE address_user_no = #{userNo} ORDER BY address_representative DESC
	</select>
	
	<select id="findAccount" resultType="String">
		SELECT user_id FROM duck_user
		WHERE user_name = #{userName} AND user_email = #{userEmail}
	</select>
	
	<select id="updatePw">
		UPDATE duck_user SET user_pw = #{tmpPw}
		WHERE user_id = #{userId}
	</select>

	<update id="setAutoLogin">
		UPDATE duck_user SET user_session_id = #{userSessionId}, user_cookie_expire_date = #{userCookieExpireDate} WHERE user_no = #{userNo}
	</update>
	
	<select id="getUserBySessionId" resultType="user">
		SELECT * FROM duck_user WHERE user_session_id = #{sessionId}
	</select>
	
	<update id="undoAutoLogin">
		UPDATE duck_user SET user_session_id = null, user_cookie_expire_date = null WHERE user_no = #{userNo}
	</update>
	
	<select id="checkCurrPw" resultType="int">
		SELECT COUNT(*) FROM duck_user WHERE user_no = #{userNo} AND user_pw = #{userPw}
	</select>
	
	<update id="changePw">
		UPDATE duck_user SET user_pw = #{modiPw} WHERE user_no = #{userNo}
	</update>
	
</mapper>
